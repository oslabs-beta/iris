version: "3"
services: 
  jmx-kafka:
    image: "sscaling/jmx-prometheus-exporter:latest"
    ports:
     - "5556:5556"
    environment:
     CONFIG_YML : "/docker/jmx_exporter/config.yml"
    volumes:
     - ./docker/jmx_exporter/config_kafka.yml:/docker/jmx_exporter/config.yml
    #  - JVM_OPTS:-Xmx128M
    container_name: jmx-kafka
  prometheus:
    image: "prom/prometheus:latest"
    ports:
     - "9090:9090"
    volumes:
     - ./docker/prometheus/prometheus.yml:/docker/prometheus/prometheus.yml
    command: "--config.file=/docker/prometheus/prometheus.yml"
    container_name: prometheus
    depends_on:
      - jmx-kafka

  # kafka-test:
  #   image: node:14-alpine
  #   entrypoint: 
  #    - "sh"
  #    - "-c"
  #    - "npm install && npm run start:producer && npm run start:consumer"
  #   volumes:
  #    - .:/tmp/app
  #   depends_on:
  #    - kafka
  #   container_name: kafka-test

  # cache:
  #   image: redis:6.2-alpine
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   command: redis-server --save 20 1 --loglevel warning

  postgres:
    image: postgres:10.5
    restart: always
    environment:
      - POSTGRES_USER=dev_user 
      - POSTGRES_PASSWORD=dev_pw
    volumes:
      - /var/lib/postgresql/data
      - ./sql-scripts/db.init.sql:/docker-entrypoint-initdb.d/db.init.sql
    ports:
      - "8532:5432"
    container_name: local-postgres
